version: '3'
services:
  local-mysql:
    image: mysql:8.0
    container_name: local-mysql
    restart: always
    command: # 명령어 실행 한글 깨짐 방지
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --sql-mode=NO_AUTO_VALUE_ON_ZERO,STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION
    ports:
      - "13306:3306" # 호스트 : 컨테이너
    environment:
      MYSQL_ROOT_PASSWORD: root # 초기 암호
      MYSQL_USER: application #초기 유저
      MYSQL_PASSWORD: application # 암호 설정
      MYSQL_DATABASE: hhplus # 사용 DB
      TZ: Asia/Seoul # TimeZone
    volumes:
      - type: bind
        source: D:\study\server-java\data\mysql8 # OS 환경에 따라 경로 설정 변경
        target: /var/lib/mysql

  local-mysql-2:
    image: mysql:8.0
    container_name: local-mysql-2
    restart: always
    command: # 명령어 실행 한글 깨짐 방지
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --sql-mode=NO_AUTO_VALUE_ON_ZERO,STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION
    ports:
      - "13307:3306" # 호스트 : 컨테이너
    environment:
      MYSQL_ROOT_PASSWORD: root # 초기 암호
      MYSQL_USER: application #초기 유저
      MYSQL_PASSWORD: application # 암호 설정
      MYSQL_DATABASE: hhplus # 사용 DB
      TZ: Asia/Seoul # TimeZone
    volumes:
      - type: bind
        source: D:\study\server-java\data\mysql8-2 # OS 환경에 따라 경로 설정 변경
        target: /var/lib/mysql

  local-redis:
    image: redis:latest
    container_name: local-redis
    restart: always
    command:
      - /bin/sh
      - -c
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    ports:
      - "16379:6379"
    environment:
      REDIS_PASSWORD: application
    volumes:
      - type: bind
        source: D:\study\server-java\data\redis\redis.conf # OS 환경에 따라 경로 설정 변경
        target: /var/lib/redis

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: PLAINTEXT://:9092,EXTERNAL://:9092
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: yes
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      KAFKA_CLUSTERS_0_NAME: LocalKafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: PLAINTEXT
    depends_on:
      - kafka
    ports:
      - "9090:8080"
networks:
  default:
    driver: bridge